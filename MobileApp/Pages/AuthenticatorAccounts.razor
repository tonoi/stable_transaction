@page "/auth-accounts"
@inject IAuthenticatorService Auth

<div style="padding: 20px;">
    <h1 style="font-size: 24px;">Authenticator Accounts</h1>
    @foreach (var acct in _accounts)
    {
        <div style="border: 1px solid #ccc; padding: 10px; margin: 5px;">
            <strong>@acct.Issuer</strong>
            <span style="margin-left: 10px;">@acct.AccountName</span>
            <strong style="margin-left: 10px;">@acct.Code</strong>
            <button @onclick="(() => DeleteAccount(acct))" style="background-color: red; color: white; margin-left: 10px;">Delete</button>
        </div>
    }
    <button @onclick="StartScan">Add via QR</button>
    @if (_scanning)
    {
        <p>QR Scanner not available in this version</p>
    }
</div>

@code {
    bool _scanning;
    List<AccountItem> _accounts = new();

    protected override async Task OnInitializedAsync() => await LoadAsync();

    async Task LoadAsync()
    {
        var accts = await Auth.GetAccountsAsync();
        _accounts = new List<AccountItem>();
        foreach (var a in accts)
        {
            _accounts.Add(new AccountItem
            {
                Issuer = a.Issuer,
                AccountName = a.AccountName,
                Code = await Auth.GenerateTotpAsync(a.Issuer, a.AccountName)
            });
        }
    }

    void StartScan() => _scanning = true;

    async Task DeleteAccount(AccountItem item)
    {
        await Auth.RemoveAccountAsync(item.Issuer, item.AccountName);
        _accounts.Remove(item);
    }

    class AccountItem
    {
        public string Issuer { get; set; } = "";
        public string AccountName { get; set; } = "";
        public string Code { get; set; } = "";
    }
}
