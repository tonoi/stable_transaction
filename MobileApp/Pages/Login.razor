@page "/login"
@using OfflineGuide.Services.Travel
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<div class="login-container">
    <div class="login-card">
        <h2>@AppResources.WelcomeToJapan</h2>
        
        <div class="login-form">
            <div class="form-group">
                <label for="username">@AppResources.Username</label>
                <input type="text" id="username" @bind="username" class="form-control" />
            </div>
            
            <div class="form-group">
                <label for="password">@AppResources.Password</label>
                <input type="password" id="password" @bind="password" class="form-control" />
            </div>
            
            <button class="btn btn-primary" @onclick="LoginWithPassword" disabled="@isLoading">
                @if (isLoading)
                {
                    <span class="spinner-border spinner-border-sm" role="status"></span>
                }
                @AppResources.Login
            </button>
            
            <div class="divider">OR</div>
            
            <button class="btn btn-secondary" @onclick="LoginWithBiometric" disabled="@isLoading">
                @AppResources.BiometricAuth
            </button>
            
            <div class="passcode-section">
                <label for="passcode">@AppResources.Passcode</label>
                <input type="password" id="passcode" @bind="passcode" class="form-control" maxlength="6" />
                <button class="btn btn-outline-primary" @onclick="LoginWithPasscode" disabled="@isLoading">
                    @AppResources.Login
                </button>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string passcode = "";
    private string errorMessage = "";
    private bool isLoading = false;

    private async Task LoginWithPassword()
    {
        isLoading = true;
        errorMessage = "";
        
        try
        {
            var success = await AuthService.LoginAsync(username, password);
            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid username or password";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task LoginWithBiometric()
    {
        isLoading = true;
        errorMessage = "";
        
        try
        {
            var success = await AuthService.BiometricLoginAsync();
            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Biometric authentication failed";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task LoginWithPasscode()
    {
        isLoading = true;
        errorMessage = "";
        
        try
        {
            var success = await AuthService.PasscodeLoginAsync(passcode);
            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid passcode";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .login-card {
        background: white;
        padding: 2rem;
        border-radius: 10px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 400px;
    }

    .login-form {
        margin-top: 1rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
    }

    .btn {
        width: 100%;
        padding: 0.75rem;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        margin-bottom: 0.5rem;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-outline-primary {
        background-color: transparent;
        color: #007bff;
        border: 1px solid #007bff;
    }

    .divider {
        text-align: center;
        margin: 1rem 0;
        color: #666;
    }

    .passcode-section {
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #eee;
    }

    .alert {
        padding: 0.75rem;
        margin-top: 1rem;
        border-radius: 5px;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style> 
